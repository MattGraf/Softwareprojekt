@using Replay.ViewModels.Account
@model RolePermissionViewModel
@{
    ViewData["Title"] = "Rolle Bearbeiten";
    ViewData["Hero"] = "Rollenbearbeitung";
}

<style>
    input[type=checkbox] {
        accent-color: rgb(20, 18, 16);
        border-color: rgb(20, 18, 16);
        border-radius: 0.25em;
    }
</style>
<a class="btn btn-dark" asp-controller="Role" asp-action="Index"><i class="bi bi-arrow-left-circle"></i> Zurück zur Übersicht</a>
<br>
<br>
<form asp-controller="Role" asp-action="Edit" method="post">
    <div asp-validation-summary="ModelOnly" class="text-danger"></div>
    <div class="form-group">
        <label asp-for="Name" class="control-label"></label>
        <input asp-for="Name" class="form-control" />
        <span asp-validation-for="Name" class="text-danger"></span>
    </div>
    <div class="form-group">
        @for (int i = 0; i < Model.PermissionViews.Count; i++)
        {
            <tr>
                <td>
                    @Html.HiddenFor(m => m.PermissionViews[i].Id)
                    @Html.HiddenFor(m => m.PermissionViews[i].Name)
                    @Html.DisplayFor(m => m.PermissionViews[i].Name)
                </td>
                <td>@Html.CheckBoxFor(m => m.PermissionViews[i].isAllowed)</td>
            </tr>
        }
     </div>


    <button type="submit" class="btn btn-success">Speichern</button>
</form>
